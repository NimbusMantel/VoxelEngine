#version 460
#extension GL_ARB_separate_shader_objects : enable

layout(local_size_x = 16, local_size_y = 16) in;

layout(binding = 0, rgba16f) uniform writeonly image2D hdr_image;

layout(push_constant) uniform Constants {
    float[9] mat; // offset: 0, alignment: 16
    float    n_x; // offset: 36, alignment: 4
    float    n_y; // offset: 40, alignment: 4
    float    n_z; // offset: 44, alignment: 4
} cst;

void main() {
    const ivec2 size = imageSize(hdr_image);

    const mat3 mat = mat3(cst.mat[0], cst.mat[1], cst.mat[2], cst.mat[3], cst.mat[4], cst.mat[5], cst.mat[6], cst.mat[7], cst.mat[8]);
    const vec3 n_p = vec3(cst.n_x, cst.n_y, cst.n_z);

    const vec4 colour = vec4(n_p, 1.0f);

    ivec2 storePos = ivec2(gl_GlobalInvocationID.xy);

    for (uint y = gl_GlobalInvocationID.y; y < size.y; y += gl_WorkGroupSize.y) {
        for (uint x = gl_GlobalInvocationID.x; x < size.x; x += gl_WorkGroupSize.x) {
            imageStore(hdr_image, ivec2(x, y), colour);
        }
    }
}