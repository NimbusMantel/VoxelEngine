if (cc[i] == 0x00) {
	cv[k++] = vs[i];
	
	continue;
}

for (m = i ^ 0x01; (m ^ i) <= 0x04; m = i ^ ((m ^ i) << 1)) {
	if (cc[m] == 0x00) {
		tmp = vs[i];

		if (cc[i] & 0x10) {
			frma = this->dot(4, tmp);
			dsta = this->dot(4, vs[m]);
			rela = frma / (frma - dsta);

			tmp = this->lerp(tmp, vs[m], rela);
		}

		resa = 0.0f;

		y = 0x01;

		for (x = 0; x < 4; ++x) {
			if (cc[i] & y) {
				frma = this->dot(x, tmp);
				dsta = this->dot(x, vs[m]);
				rela = frma / (frma - dsta);

				if (resa < rela) resa = rela;
			}

			y <<= 1;
		}
		
		cv[k++] = this->lerp(tmp, vs[m], resa);

		if (cc[i] & 0xEF) {
			tmp = cv[k - 1];

			y = (((fabs(this->dot(0, tmp)) < M_EPSILON) ? 0x01 : 0x00) |
				 ((fabs(this->dot(1, tmp)) < M_EPSILON) ? 0x02 : 0x00) |
				 ((fabs(this->dot(2, tmp)) < M_EPSILON) ? 0x04 : 0x00) |
				 ((fabs(this->dot(3, tmp)) < M_EPSILON) ? 0x08 : 0x00));

			switch (cc[i] & 0xEF) {
				case 0x05: msk |= ((((y & 0x05) == 0x01) ? 0x80 : 0x00) | (((y & 0x05) == 0x04) ? 0x01 : 0x00)); break; // ld
				case 0x06: msk |= ((((y & 0x06) == 0x02) ? 0x40 : 0x00) | (((y & 0x06) == 0x04) ? 0x20 : 0x00)); break; // rd
				case 0x09: msk |= ((((y & 0x09) == 0x01) ? 0x04 : 0x00) | (((y & 0x09) == 0x08) ? 0x02 : 0x00)); break; // lu
				case 0x0A: msk |= ((((y & 0x0A) == 0x02) ? 0x08 : 0x00) | (((y & 0x0A) == 0x08) ? 0x10 : 0x00)); break; // ru
			}
		}
		
		continue;
	}

	if ((cc[i] & cc[m] & 0xEF) != 0x00) {
		switch (cc[i] & 0xEF) {
			case 0x05: msk |= ((cc[m] & 0x01) | (cc[m] & 0x04) << 5); break; // ld
			case 0x06: msk |= ((cc[m] & 0x02) << 4 | (cc[m] & 0x04) << 4); break; // rd
			case 0x09: msk |= ((cc[m] & 0x01) << 1 | (cc[m] & 0x08) >> 1); break; // lu
			case 0x0A: msk |= ((cc[m] & 0x02) << 3 | (cc[m] & 0x08)); break; // ru
		}

		continue;
	}

	tmp = vs[i];

	if (cc[i] & 0x10) {
		frma = this->dot(4, tmp);
		dsta = this->dot(4, vs[m]);
		rela = frma / (frma - dsta);

		tmp = this->lerp(tmp, vs[m], rela);
	}

	if (!(cc[i] & cc[m] & 0x10)) {
		resa = 0.0f;

		y = 0x01;

		for (x = 0; x < 4; ++x) {
			if (cc[i] & y) {
				frma = this->dot(x, tmp);
				dsta = this->dot(x, vs[m]);
				rela = frma / (frma - dsta);

				if (frma > dsta) break;

				if (resa < rela) resa = rela;
			}

			y <<= 1;
		}
	}

	if ((cc[i] & cc[m] & 0x10) || x < 4) {
		if (cc[i] & 0x01) {
			if (cc[m] & 0x04) {
				msk |= 0x81;
			}
			else if (cc[m] & 0x08) {
				msk |= 0x06;
			}
		}
		else if (cc[i] & 0x02) {
			if (cc[m] & 0x04) {
				msk |= 0x60;
			}
			else if (cc[m] & 0x08) {
				msk |= 0x18;
			}
		}
		else if (cc[i] & 0x04) {
			if (cc[m] & 0x01) {
				msk |= 0x81;
			}
			else if (cc[m] & 0x02) {
				msk |= 0x60;
			}
		}
		else if (cc[i] & 0x08) {
			if (cc[m] & 0x01) {
				msk |= 0x06;
			}
			else if (cc[m] & 0x02) {
				msk |= 0x18;
			}
		}
	}
	else {
		cv[k++] = this->lerp(vs[i], vs[m], resa);
	}
}